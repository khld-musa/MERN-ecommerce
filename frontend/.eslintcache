[{"D:\\graduationProject\\frontend\\src\\index.js":"1","D:\\graduationProject\\frontend\\src\\store.js":"2","D:\\graduationProject\\frontend\\src\\App.js":"3","D:\\graduationProject\\frontend\\src\\reducers\\cartReducers.js":"4","D:\\graduationProject\\frontend\\src\\reducers\\productReducers.js":"5","D:\\graduationProject\\frontend\\src\\reducers\\userReducers.js":"6","D:\\graduationProject\\frontend\\src\\reducers\\orderReducers.js":"7","D:\\graduationProject\\frontend\\src\\components\\Home.js":"8","D:\\graduationProject\\frontend\\src\\components\\cart\\OrderSuccess.js":"9","D:\\graduationProject\\frontend\\src\\components\\cart\\Shipping.js":"10","D:\\graduationProject\\frontend\\src\\components\\cart\\Payment.js":"11","D:\\graduationProject\\frontend\\src\\components\\cart\\Cart.js":"12","D:\\graduationProject\\frontend\\src\\components\\cart\\ConfirmOrder.js":"13","D:\\graduationProject\\frontend\\src\\components\\product\\ProductDetails.js":"14","D:\\graduationProject\\frontend\\src\\components\\layout\\Header.js":"15","D:\\graduationProject\\frontend\\src\\components\\order\\ListOrders.js":"16","D:\\graduationProject\\frontend\\src\\components\\user\\Register.js":"17","D:\\graduationProject\\frontend\\src\\components\\user\\Login.js":"18","D:\\graduationProject\\frontend\\src\\components\\order\\OrderDetails.js":"19","D:\\graduationProject\\frontend\\src\\components\\user\\UpdatePassword.js":"20","D:\\graduationProject\\frontend\\src\\components\\user\\Profile.js":"21","D:\\graduationProject\\frontend\\src\\components\\user\\NewPassword.js":"22","D:\\graduationProject\\frontend\\src\\components\\user\\ForgotPassword.js":"23","D:\\graduationProject\\frontend\\src\\components\\user\\UpdateProfile.js":"24","D:\\graduationProject\\frontend\\src\\components\\layout\\Footer.js":"25","D:\\graduationProject\\frontend\\src\\components\\admin\\Dashboard.js":"26","D:\\graduationProject\\frontend\\src\\components\\admin\\UsersList.js":"27","D:\\graduationProject\\frontend\\src\\components\\admin\\OrdersList.js":"28","D:\\graduationProject\\frontend\\src\\components\\admin\\ProductsList.js":"29","D:\\graduationProject\\frontend\\src\\components\\admin\\UpdateProduct.js":"30","D:\\graduationProject\\frontend\\src\\components\\admin\\ProcessOrder.js":"31","D:\\graduationProject\\frontend\\src\\components\\route\\ProtectedRoute.js":"32","D:\\graduationProject\\frontend\\src\\components\\admin\\NewProduct.js":"33","D:\\graduationProject\\frontend\\src\\components\\admin\\UpdateUser.js":"34","D:\\graduationProject\\frontend\\src\\actions\\userActions.js":"35","D:\\graduationProject\\frontend\\src\\components\\admin\\ProductReviews.js":"36","D:\\graduationProject\\frontend\\src\\components\\layout\\MetaData.js":"37","D:\\graduationProject\\frontend\\src\\components\\layout\\Loader.js":"38","D:\\graduationProject\\frontend\\src\\actions\\productActions.js":"39","D:\\graduationProject\\frontend\\src\\components\\product\\Product.js":"40","D:\\graduationProject\\frontend\\src\\actions\\orderActions.js":"41","D:\\graduationProject\\frontend\\src\\actions\\cartActions.js":"42","D:\\graduationProject\\frontend\\src\\components\\cart\\CheckoutSteps.js":"43","D:\\graduationProject\\frontend\\src\\components\\admin\\Sidebar.js":"44","D:\\graduationProject\\frontend\\src\\constants\\productConstants.js":"45","D:\\graduationProject\\frontend\\src\\constants\\cartConstants.js":"46","D:\\graduationProject\\frontend\\src\\constants\\userConstants.js":"47","D:\\graduationProject\\frontend\\src\\constants\\orderConstants.js":"48","D:\\graduationProject\\frontend\\src\\components\\layout\\Search.js":"49","D:\\graduationProject\\frontend\\src\\components\\review\\ListReviews.js":"50"},{"size":589,"mtime":1748354811802,"results":"51","hashOfConfig":"52"},{"size":1734,"mtime":1748354811806,"results":"53","hashOfConfig":"52"},{"size":4811,"mtime":1748354811798,"results":"54","hashOfConfig":"52"},{"size":1368,"mtime":1752127656425,"results":"55","hashOfConfig":"52"},{"size":6961,"mtime":1748354812041,"results":"56","hashOfConfig":"52"},{"size":6373,"mtime":1748354812045,"results":"57","hashOfConfig":"52"},{"size":4375,"mtime":1748354812037,"results":"58","hashOfConfig":"52"},{"size":10474,"mtime":1752130917254,"results":"59","hashOfConfig":"52"},{"size":732,"mtime":1748354811900,"results":"60","hashOfConfig":"52"},{"size":4677,"mtime":1761137130084,"results":"61","hashOfConfig":"52"},{"size":5593,"mtime":1752127656002,"results":"62","hashOfConfig":"52"},{"size":4670,"mtime":1752130902333,"results":"63","hashOfConfig":"52"},{"size":8633,"mtime":1752131846310,"results":"64","hashOfConfig":"52"},{"size":9637,"mtime":1752130917220,"results":"65","hashOfConfig":"52"},{"size":3260,"mtime":1750287145940,"results":"66","hashOfConfig":"52"},{"size":2741,"mtime":1752057490938,"results":"67","hashOfConfig":"52"},{"size":6983,"mtime":1760809209728,"results":"68","hashOfConfig":"52"},{"size":4645,"mtime":1760809210351,"results":"69","hashOfConfig":"52"},{"size":3994,"mtime":1752132376257,"results":"70","hashOfConfig":"52"},{"size":2922,"mtime":1748354811999,"results":"71","hashOfConfig":"52"},{"size":2082,"mtime":1748354811991,"results":"72","hashOfConfig":"52"},{"size":2924,"mtime":1748354811987,"results":"73","hashOfConfig":"52"},{"size":3025,"mtime":1760808551049,"results":"74","hashOfConfig":"52"},{"size":5128,"mtime":1760809718971,"results":"75","hashOfConfig":"52"},{"size":344,"mtime":1748354811917,"results":"76","hashOfConfig":"52"},{"size":5769,"mtime":1748354811843,"results":"77","hashOfConfig":"52"},{"size":3586,"mtime":1752057492106,"results":"78","hashOfConfig":"52"},{"size":3830,"mtime":1752061797312,"results":"79","hashOfConfig":"52"},{"size":3831,"mtime":1752061802773,"results":"80","hashOfConfig":"52"},{"size":11346,"mtime":1760808551034,"results":"81","hashOfConfig":"52"},{"size":9207,"mtime":1752132117696,"results":"82","hashOfConfig":"52"},{"size":920,"mtime":1748354811972,"results":"83","hashOfConfig":"52"},{"size":10473,"mtime":1760808551049,"results":"84","hashOfConfig":"52"},{"size":4587,"mtime":1748354811875,"results":"85","hashOfConfig":"52"},{"size":7612,"mtime":1752128075929,"results":"86","hashOfConfig":"52"},{"size":5122,"mtime":1752057491592,"results":"87","hashOfConfig":"52"},{"size":229,"mtime":1748354811928,"results":"88","hashOfConfig":"52"},{"size":134,"mtime":1748354811925,"results":"89","hashOfConfig":"52"},{"size":5936,"mtime":1748354811822,"results":"90","hashOfConfig":"52"},{"size":1372,"mtime":1752130916949,"results":"91","hashOfConfig":"52"},{"size":4658,"mtime":1752129807596,"results":"92","hashOfConfig":"52"},{"size":1760,"mtime":1752128077166,"results":"93","hashOfConfig":"52"},{"size":1844,"mtime":1748354811892,"results":"94","hashOfConfig":"52"},{"size":1638,"mtime":1748354811867,"results":"95","hashOfConfig":"52"},{"size":1905,"mtime":1748354812022,"results":"96","hashOfConfig":"52"},{"size":185,"mtime":1752127656199,"results":"97","hashOfConfig":"52"},{"size":2213,"mtime":1748354812026,"results":"98","hashOfConfig":"52"},{"size":1160,"mtime":1748354812018,"results":"99","hashOfConfig":"52"},{"size":1013,"mtime":1748354811932,"results":"100","hashOfConfig":"52"},{"size":714,"mtime":1748354811964,"results":"101","hashOfConfig":"52"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"18xl9q5",{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"104"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"104"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"104"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"104"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"104"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"104"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"104"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"D:\\graduationProject\\frontend\\src\\index.js",[],["210","211"],"D:\\graduationProject\\frontend\\src\\store.js",[],"D:\\graduationProject\\frontend\\src\\App.js",[],"D:\\graduationProject\\frontend\\src\\reducers\\cartReducers.js",[],"D:\\graduationProject\\frontend\\src\\reducers\\productReducers.js",[],"D:\\graduationProject\\frontend\\src\\reducers\\userReducers.js",[],"D:\\graduationProject\\frontend\\src\\reducers\\orderReducers.js",[],"D:\\graduationProject\\frontend\\src\\components\\Home.js",[],"D:\\graduationProject\\frontend\\src\\components\\cart\\OrderSuccess.js",[],"D:\\graduationProject\\frontend\\src\\components\\cart\\Shipping.js",["212"],"D:\\graduationProject\\frontend\\src\\components\\cart\\Payment.js",[],"D:\\graduationProject\\frontend\\src\\components\\cart\\Cart.js",["213"],"import React, { Fragment } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport MetaData from '../layout/MetaData'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { addItemToCart, removeItemFromCart } from '../../actions/cartActions'\n\nconst Cart = ({ history }) => {\n\n    const dispatch = useDispatch();\n\n    const { cartItems } = useSelector(state => state.cart)\n\n    const removeCartItemHandler = (id) => {\n        dispatch(removeItemFromCart(id))\n    }\n\n    const increaseQty = (id, quantity, stock) => {\n        const newQty = quantity + 1;\n\n        if (newQty > stock) return;\n\n        dispatch(addItemToCart(id, newQty))\n    }\n\n    const decreaseQty = (id, quantity) => {\n\n        const newQty = quantity - 1;\n\n        if (newQty <= 0) return;\n\n        dispatch(addItemToCart(id, newQty))\n\n    }\n\n    const checkoutHandler = () => {\n        history.push('/login?redirect=shipping')\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Your Cart'} />\n            {cartItems.length === 0 ? <h2 className=\"mt-5\">Your Cart is Empty</h2> : (\n                <Fragment>\n                    <h2 className=\"mt-5\">Your Cart: <b>{cartItems.length} items</b></h2>\n\n                    <div className=\"row d-flex justify-content-between\">\n                        <div className=\"col-12 col-lg-8\">\n\n                            {cartItems.map(item => (\n                                <Fragment>\n                                    <hr />\n\n                                    <div className=\"cart-item\" key={item.product}>\n                                        <div className=\"row\">\n                                            <div className=\"col-4 col-lg-3\">\n                                                <img src={item.image && item.image.startsWith('/uploads') ? item.image : item.image} alt={item.name} height=\"90\" width=\"115\" />\n                                            </div>\n\n                                            <div className=\"col-5 col-lg-3\">\n                                                <Link to={`/products/${item.product}`}>{item.name}</Link>\n                                            </div>\n\n\n                                            <div className=\"col-4 col-lg-2 mt-4 mt-lg-0\">\n                                                <p id=\"card_item_price\">${item.price}</p>\n                                            </div>\n\n                                            <div className=\"col-4 col-lg-3 mt-4 mt-lg-0\">\n                                                <div className=\"stockCounter d-inline\">\n                                                    <span className=\"btn btn-danger minus\" onClick={() => decreaseQty(item.product, item.quantity)}>-</span>\n\n                                                    <input type=\"number\" className=\"form-control count d-inline\" value={item.quantity} readOnly />\n\n                                                    <span className=\"btn btn-primary plus\" onClick={() => increaseQty(item.product, item.quantity, item.stock)}>+</span>\n                                                </div>\n                                            </div>\n\n                                            <div className=\"col-4 col-lg-1 mt-4 mt-lg-0\">\n                                                <i id=\"delete_cart_item\" className=\"fa fa-trash btn btn-danger\" onClick={() => removeCartItemHandler(item.product)} ></i>\n                                            </div>\n\n                                        </div>\n                                    </div>\n                                    <hr />\n                                </Fragment>\n                            ))}\n\n                        </div>\n\n                        <div className=\"col-12 col-lg-3 my-4\">\n                            <div id=\"order_summary\">\n                                <h4>Order Summary</h4>\n                                <hr />\n                                <p>Subtotal:  <span className=\"order-summary-values\">{cartItems.reduce((acc, item) => (acc + Number(item.quantity)), 0)} (Units)</span></p>\n                                <p>Est. total: <span className=\"order-summary-values\">${cartItems.reduce((acc, item) => acc + item.quantity * item.price, 0).toFixed(2)}</span></p>\n\n                                <hr />\n                                <button id=\"checkout_btn\" className=\"btn btn-primary btn-block\" onClick={checkoutHandler}>Check out</button>\n                            </div>\n                        </div>\n                    </div>\n                </Fragment>\n            )}\n        </Fragment>\n    )\n}\n\nexport default Cart\n","D:\\graduationProject\\frontend\\src\\components\\cart\\ConfirmOrder.js",[],"D:\\graduationProject\\frontend\\src\\components\\product\\ProductDetails.js",[],"D:\\graduationProject\\frontend\\src\\components\\layout\\Header.js",["214"],"import React, { Fragment } from 'react'\nimport { Route, Link } from 'react-router-dom'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useAlert } from 'react-alert'\nimport { logout } from '../../actions/userActions'\n\nimport Search from './Search'\n\nimport '../../App.css'\n\nconst Header = () => {\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { user, loading } = useSelector(state => state.auth)\n    const { cartItems } = useSelector(state => state.cart)\n\n    const logoutHandler = () => {\n        dispatch(logout());\n        alert.success('Logged out successfully.')\n    }\n\n    return (\n        <Fragment>\n            <nav className=\"navbar row\">\n                <div className=\"col-12 col-md-3\">\n                    <div className=\"navbar-brand w-50 h-50\">\n                        <Link to=\"/\">\n                            <img className='w-50 h-50' src=\"/images/shopit_logo.png\" />\n                        </Link>\n                    </div>\n                </div>\n\n                <div className=\"col-12 col-md-6 mt-2 mt-md-0\">\n                    <Route render={({ history }) => <Search history={history} />} />\n                </div>\n\n                <div className=\"col-12 col-md-3 mt-4 mt-md-0 text-center\">\n                    <Link to=\"/cart\" style={{ textDecoration: 'none' }} >\n                        <span id=\"cart\" className=\"ml-3\">Cart</span>\n                        <span className=\"ml-1\" id=\"cart_count\">{cartItems.length}</span>\n                    </Link>\n\n                    {user ? (\n                        <div className=\"ml-4 dropdown d-inline\">\n                            <Link to=\"#!\" className=\"btn dropdown-toggle text-white mr-4\" type=\"button\" id=\"dropDownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n\n                                <figure className=\"avatar avatar-nav\">\n                                    <img\n                                        src={user.avatar && user.avatar.url}\n                                        alt={user && user.name}\n                                        className=\"rounded-circle\"\n                                    />\n                                </figure>\n                                <span>{user && user.name}</span>\n                            </Link>\n\n                            <div className=\"dropdown-menu\" aria-labelledby=\"dropDownMenuButton\">\n\n                                {user && user.role === 'admin' && (\n                                    <Link className=\"dropdown-item\" to=\"/dashboard\">Dashboard</Link>\n                                )}\n                                <Link className=\"dropdown-item\" to=\"/orders/me\">Orders</Link>\n                                <Link className=\"dropdown-item\" to=\"/me\">Profile</Link>\n                                <Link className=\"dropdown-item text-danger\" to=\"/\" onClick={logoutHandler}>\n                                    Logout\n                                </Link>\n\n                            </div>\n\n\n                        </div>\n\n                    ) : !loading && <Link to=\"/login\" className=\"btn ml-4\" id=\"login_btn\">Login</Link>}\n\n\n                </div>\n            </nav>\n        </Fragment>\n    )\n}\n\nexport default Header\n","D:\\graduationProject\\frontend\\src\\components\\order\\ListOrders.js",[],"D:\\graduationProject\\frontend\\src\\components\\user\\Register.js",["215","216"],"import React, { Fragment, useState, useEffect } from 'react'\n\nimport MetaData from '../layout/MetaData'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { register, clearErrors } from '../../actions/userActions'\n\nconst Register = ({ history }) => {\n\n    const [user, setUser] = useState({\n        name: '',\n        email: '',\n        password: '',\n    })\n\n    const { name, email, password } = user;\n\n    const [avatar, setAvatar] = useState('')\n    const [avatarPreview, setAvatarPreview] = useState('/images/default_avatar.jpg')\n    const [errors, setErrors] = useState({});\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { isAuthenticated, error, loading } = useSelector(state => state.auth);\n\n    useEffect(() => {\n\n        if (isAuthenticated) {\n            history.push('/')\n        }\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n\n    }, [dispatch, alert, isAuthenticated, error, history])\n\n    const validate = () => {\n        const newErrors = {};\n        if (!name) {\n            newErrors.name = 'Name is required';\n        } else if (!/^\\d{8}$/.test(name)) {\n            newErrors.name = 'Name must be exactly 8 digits';\n        }\n        if (!email) {\n            newErrors.email = 'Email is required';\n        } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)) {\n            newErrors.email = 'Invalid email format';\n        }\n        if (!password) {\n            newErrors.password = 'Password is required';\n        } else if (password.length < 6) {\n            newErrors.password = 'Password must be at least 6 characters';\n        }\n        return newErrors;\n    };\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        const validationErrors = validate();\n        setErrors(validationErrors);\n        if (Object.keys(validationErrors).length === 0) {\n            const formData = new FormData();\n            formData.set('name', name);\n            formData.set('email', email);\n            formData.set('password', password);\n            formData.set('avatar', avatar);\n            dispatch(register(formData));\n        }\n    }\n\n    const onChange = e => {\n        // Avatar selection is disabled\n        if (e.target.name === 'avatar') {\n            return;\n        } else {\n            setUser({ ...user, [e.target.name]: e.target.value })\n        }\n    }\n\n    return (\n        <Fragment>\n\n            <MetaData title={'Register User'} />\n\n            <div className=\"row wrapper\">\n                <div className=\"col-10 col-lg-5\">\n                    <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\n                        <h1 className=\"mb-3\">Register</h1>\n                        {errors.general && (\n                            <div className=\"alert alert-danger\">{errors.general}</div>\n                        )}\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"name_field\">name</label>\n                            <input\n                                type=\"text\"\n                                id=\"name_field\"\n                                className=\"form-control\"\n                                name='name'\n                                value={name}\n                                onChange={onChange}\n                                autoComplete=\"off\"\n                            />\n                            {errors.name && (\n                                <small className=\"text-danger\">{errors.name}</small>\n                            )}\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email_field\">Email</label>\n                            <input\n                                type=\"text\"\n                                id=\"email_field\"\n                                className=\"form-control\"\n                                name='email'\n                                value={email}\n                                onChange={onChange}\n                            />\n                            {errors.email && (\n                                <small className=\"text-danger\">{errors.email}</small>\n                            )}\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"password_field\">Password</label>\n                            <input\n                                type=\"password\"\n                                id=\"password_field\"\n                                className=\"form-control\"\n                                name='password'\n                                value={password}\n                                onChange={onChange}\n                            />\n                            {errors.password && (\n                                <small className=\"text-danger\">{errors.password}</small>\n                            )}\n                        </div>\n\n                        <div className='form-group'>\n                            <label htmlFor='avatar_upload'>Avatar</label>\n                            <div className='d-flex align-items-center'>\n                                <div>\n                                    <figure className='avatar mr-3 item-rtl'>\n                                        <img\n                                            src={avatarPreview}\n                                            className='rounded-circle'\n                                            alt='Avatar Preview'\n                                        />\n                                    </figure>\n                                </div>\n                                <div className='custom-file'>\n                                    <input\n                                        type='file'\n                                        name='avatar'\n                                        className='custom-file-input'\n                                        id='customFile'\n                                        accept=\"images/*\"\n                                        disabled\n                                    />\n                                    <label className='custom-file-label' htmlFor='customFile'>\n                                        Default Avatar Only\n                                    </label>\n                                </div>\n                            </div>\n                        </div>\n\n                        <button\n                            id=\"register_button\"\n                            type=\"submit\"\n                            className=\"btn btn-block py-3\"\n                            disabled={loading ? true : false}\n                        >\n                            REGISTER\n                        </button>\n                    </form>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default Register\n","D:\\graduationProject\\frontend\\src\\components\\user\\Login.js",["217"],"import React, { Fragment, useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport Loader from '../layout/Loader'\nimport MetaData from '../layout/MetaData'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { login, clearErrors } from '../../actions/userActions'\n\nconst Login = ({ history, location }) => {\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [errors, setErrors] = useState({});\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { isAuthenticated, error, loading } = useSelector(state => state.auth);\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    useEffect(() => {\n\n        if (isAuthenticated) {\n            history.push(redirect)\n        }\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n\n    }, [dispatch, alert, isAuthenticated, error, history])\n\n    const validate = () => {\n        const newErrors = {};\n        if (!email) {\n            newErrors.email = 'Email is required';\n        } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)) {\n            newErrors.email = 'Invalid email format';\n        }\n        if (!password) {\n            newErrors.password = 'Password is required';\n        } else if (password.length < 6) {\n            newErrors.password = 'Password must be at least 6 characters';\n        }\n        return newErrors;\n    };\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        const validationErrors = validate();\n        setErrors(validationErrors);\n        if (Object.keys(validationErrors).length === 0) {\n            dispatch(login(email, password));\n        }\n    }\n\n    return (\n        <Fragment>\n            {loading ? <Loader /> : (\n                <Fragment>\n                    <MetaData title={'Login'} />\n\n                    <div className=\"row wrapper\">\n                        <div className=\"col-10 col-lg-5\">\n                            <form className=\"shadow-lg\" onSubmit={submitHandler}>\n                                <h1 className=\"mb-3\">Login</h1>\n                                {errors.general && (\n                                    <div className=\"alert alert-danger\">{errors.general}</div>\n                                )}\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"email_field\">Email</label>\n                                    <input\n                                        type=\"text\"\n                                        id=\"email_field\"\n                                        className=\"form-control\"\n                                        value={email}\n                                        onChange={(e) => setEmail(e.target.value)}\n                                    />\n                                    {errors.email && (\n                                        <small className=\"text-danger\">{errors.email}</small>\n                                    )}\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"password_field\">Password</label>\n                                    <input\n                                        type=\"password\"\n                                        id=\"password_field\"\n                                        className=\"form-control\"\n                                        value={password}\n                                        onChange={(e) => setPassword(e.target.value)}\n                                    />\n                                    {errors.password && (\n                                        <small className=\"text-danger\">{errors.password}</small>\n                                    )}\n                                </div>\n\n                                <Link to=\"/password/forgot\" className=\"float-right mb-4\">Forgot Password?</Link>\n\n                                <button\n                                    id=\"login_button\"\n                                    type=\"submit\"\n                                    className=\"btn btn-block py-3\"\n                                >\n                                    LOGIN\n                                </button>\n\n                                <Link to=\"/register\" className=\"float-right mt-3\">New User?</Link>\n                            </form>\n                        </div>\n                    </div>\n\n\n                </Fragment>\n            )}\n        </Fragment>\n    )\n}\n\nexport default Login\n","D:\\graduationProject\\frontend\\src\\components\\order\\OrderDetails.js",[],"D:\\graduationProject\\frontend\\src\\components\\user\\UpdatePassword.js",[],"D:\\graduationProject\\frontend\\src\\components\\user\\Profile.js",[],"D:\\graduationProject\\frontend\\src\\components\\user\\NewPassword.js",[],"D:\\graduationProject\\frontend\\src\\components\\user\\ForgotPassword.js",[],"D:\\graduationProject\\frontend\\src\\components\\user\\UpdateProfile.js",["218","219"],"import React, { Fragment, useState, useEffect } from 'react'\n\nimport MetaData from '../layout/MetaData'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateProfile, loadUser, clearErrors } from '../../actions/userActions'\nimport { UPDATE_PROFILE_RESET } from '../../constants/userConstants'\n\nconst UpdateProfile = ({ history }) => {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [avatar, setAvatar] = useState('')\n    const [avatarPreview, setAvatarPreview] = useState('/images/default_avatar.jpg')\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { user } = useSelector(state => state.auth);\n    const { error, isUpdated, loading } = useSelector(state => state.user)\n\n    useEffect(() => {\n\n        if (user) {\n            setName(user.name);\n            setEmail(user.email);\n            setAvatarPreview(user.avatar.url)\n        }\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n\n        if (isUpdated) {\n            alert.success('User updated successfully')\n            dispatch(loadUser());\n\n            history.push('/me')\n\n            dispatch({\n                type: UPDATE_PROFILE_RESET\n            })\n        }\n\n    }, [dispatch, alert, error, history, isUpdated])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('name', name);\n        formData.set('email', email);\n        formData.set('avatar', avatar);\n\n        dispatch(updateProfile(formData))\n    }\n\n    const onChange = e => {\n        const reader = new FileReader();\n\n        reader.onload = () => {\n            if (reader.readyState === 2) {\n                setAvatarPreview(reader.result)\n                setAvatar(reader.result)\n            }\n        }\n\n        reader.readAsDataURL(e.target.files[0])\n\n    }\n    return (\n        <Fragment>\n            <MetaData title={'Update Profile'} />\n\n            <div className=\"row wrapper\">\n                <div className=\"col-10 col-lg-5\">\n                    <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\n                        <h1 className=\"mt-2 mb-5\">Update Profile</h1>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email_field\">Name</label>\n                            <input\n                                type=\"name\"\n                                id=\"name_field\"\n                                className=\"form-control\"\n                                name='name'\n                                value={name}\n                                onChange={(e) => setName(e.target.value)}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email_field\">Email</label>\n                            <input\n                                type=\"email\"\n                                id=\"email_field\"\n                                className=\"form-control\"\n                                name='email'\n                                value={email}\n                                onChange={(e) => setEmail(e.target.value)}\n                            />\n                        </div>\n\n                        <div className='form-group'>\n                            <label htmlFor='avatar_upload'>Avatar</label>\n                            <div className='d-flex align-items-center'>\n                                <div>\n                                    <figure className='avatar mr-3 item-rtl'>\n                                        <img\n                                            src={avatarPreview}\n                                            className='rounded-circle'\n                                            alt='Avatar Preview'\n                                        />\n                                    </figure>\n                                </div>\n                                {/* <div className='custom-file'>\n                                    <input\n                                        type='file'\n                                        name='avatar'\n                                        className='custom-file-input'\n                                        id='customFile'\n                                        accept='image/*'\n                                        onChange={onChange}\n                                    />\n                                    <label className='custom-file-label' htmlFor='customFile'>\n                                        Choose Avatar\n                                </label>\n                                </div> */}\n                            </div>\n                        </div>\n\n                        <button type=\"submit\" className=\"btn update-btn btn-block mt-4 mb-3\" disabled={loading ? true : false} >Update</button>\n                    </form>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default UpdateProfile\n","D:\\graduationProject\\frontend\\src\\components\\layout\\Footer.js",[],"D:\\graduationProject\\frontend\\src\\components\\admin\\Dashboard.js",[],"D:\\graduationProject\\frontend\\src\\components\\admin\\UsersList.js",[],"D:\\graduationProject\\frontend\\src\\components\\admin\\OrdersList.js",[],"D:\\graduationProject\\frontend\\src\\components\\admin\\ProductsList.js",[],"D:\\graduationProject\\frontend\\src\\components\\admin\\UpdateProduct.js",[],"D:\\graduationProject\\frontend\\src\\components\\admin\\ProcessOrder.js",[],"D:\\graduationProject\\frontend\\src\\components\\route\\ProtectedRoute.js",[],"D:\\graduationProject\\frontend\\src\\components\\admin\\NewProduct.js",[],"D:\\graduationProject\\frontend\\src\\components\\admin\\UpdateUser.js",[],"D:\\graduationProject\\frontend\\src\\actions\\userActions.js",[],"D:\\graduationProject\\frontend\\src\\components\\admin\\ProductReviews.js",["220"],"import React, { Fragment, useState, useEffect } from 'react'\nimport { MDBDataTable } from 'mdbreact'\n\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport Sidebar from './Sidebar'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getProductReviews, deleteReview, clearErrors } from '../../actions/productActions'\nimport { DELETE_REVIEW_RESET } from '../../constants/productConstants'\n\nconst ProductReviews = () => {\n\n    const [productId, setProductId] = useState('')\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { error, reviews } = useSelector(state => state.productReviews);\n    const { isDeleted, error: deleteError } = useSelector(state => state.review)\n\n    useEffect(() => {\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n        if (deleteError) {\n            alert.error(deleteError);\n            dispatch(clearErrors())\n        }\n\n        if (productId !== '') {\n            dispatch(getProductReviews(productId))\n        }\n\n        if (isDeleted) {\n            alert.success('Review deleted successfully');\n            dispatch({ type: DELETE_REVIEW_RESET })\n        }\n\n\n\n    }, [dispatch, alert, error, productId, isDeleted, deleteError])\n\n    const deleteReviewHandler = (id) => {\n        dispatch(deleteReview(id, productId))\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(getProductReviews(productId))\n    }\n\n    const setReviews = () => {\n        const data = {\n            columns: [\n                {\n                    label: 'Review ID',\n                    field: 'id',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Rating',\n                    field: 'rating',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Comment',\n                    field: 'comment',\n                    sort: 'asc'\n                },\n                {\n                    label: 'User',\n                    field: 'user',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions',\n                },\n            ],\n            rows: []\n        }\n\n        reviews.forEach(review => {\n            data.rows.push({\n                id: review._id,\n                rating: review.rating,\n                comment: review.comment,\n                user: review.name,\n\n                actions:\n                    <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => deleteReviewHandler(review._id)}>\n                        <i className=\"fa fa-trash\"></i>\n                    </button>\n            })\n        })\n\n        return data;\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Product Reviews'} />\n            <div className=\"row\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n\n                <div className=\"col-12 col-md-10\">\n                    <Fragment>\n                        <div className=\"row justify-content-center mt-5\">\n                            <div className=\"col-5\">\n                                <form onSubmit={submitHandler}>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"productId_field\">Enter Product ID</label>\n                                        <input\n                                            type=\"text\"\n                                            id=\"productId_field\"\n                                            className=\"form-control\"\n                                            value={productId}\n                                            onChange={(e) => setProductId(e.target.value)}\n                                        />\n                                    </div>\n\n                                    <button\n                                        id=\"search_button\"\n                                        type=\"submit\"\n                                        className=\"btn btn-primary btn-block py-2\"\n                                    >\n                                        SEARCH\n                                    </button>\n                                </ form>\n                            </div>\n\n                        </div>\n\n                        {reviews && reviews.length > 0 ? (\n                            <MDBDataTable\n                                data={setReviews()}\n                                className=\"px-3\"\n                                bordered\n                                striped\n                                hover\n                                responsive\n                            />\n                        ) : (\n                            <p className=\"mt-5 text-center\">No Reviews.</p>\n                        )}\n\n\n                    </Fragment>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default ProductReviews\n","D:\\graduationProject\\frontend\\src\\components\\layout\\MetaData.js",[],"D:\\graduationProject\\frontend\\src\\components\\layout\\Loader.js",[],"D:\\graduationProject\\frontend\\src\\actions\\productActions.js",["221"],"import axios from 'axios';\n\nimport {\n    ALL_PRODUCTS_REQUEST,\n    ALL_PRODUCTS_SUCCESS,\n    ALL_PRODUCTS_FAIL,\n    ADMIN_PRODUCTS_REQUEST,\n    ADMIN_PRODUCTS_SUCCESS,\n    ADMIN_PRODUCTS_FAIL,\n    NEW_PRODUCT_REQUEST,\n    NEW_PRODUCT_SUCCESS,\n    NEW_PRODUCT_FAIL,\n    DELETE_PRODUCT_REQUEST,\n    DELETE_PRODUCT_SUCCESS,\n    DELETE_PRODUCT_FAIL,\n    UPDATE_PRODUCT_REQUEST,\n    UPDATE_PRODUCT_SUCCESS,\n    UPDATE_PRODUCT_FAIL,\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n    NEW_REVIEW_REQUEST,\n    NEW_REVIEW_SUCCESS,\n    NEW_REVIEW_FAIL,\n    GET_REVIEWS_REQUEST,\n    GET_REVIEWS_SUCCESS,\n    GET_REVIEWS_FAIL,\n    DELETE_REVIEW_REQUEST,\n    DELETE_REVIEW_SUCCESS,\n    DELETE_REVIEW_RESET,\n    DELETE_REVIEW_FAIL,\n    CLEAR_ERRORS\n\n} from '../constants/productConstants'\n\nexport const getProducts = (keyword = '', currentPage = 1, price, category, rating = 0) => async (dispatch) => {\n    try {\n\n        dispatch({ type: ALL_PRODUCTS_REQUEST })\n\n        let link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&ratings[gte]=${rating}`\n\n        if (category) {\n            link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&category=${category}&ratings[gte]=${rating}`\n        }\n\n        const { data } = await axios.get(link)\n\n        dispatch({\n            type: ALL_PRODUCTS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ALL_PRODUCTS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\nexport const newProduct = (productData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: NEW_PRODUCT_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(`/api/v1/admin/product/new`, productData, config)\n\n        dispatch({\n            type: NEW_PRODUCT_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: NEW_PRODUCT_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Delete product (Admin)\nexport const deleteProduct = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: DELETE_PRODUCT_REQUEST })\n\n        const { data } = await axios.delete(`/api/v1/admin/product/${id}`)\n\n        dispatch({\n            type: DELETE_PRODUCT_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: DELETE_PRODUCT_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Update Product (ADMIN)\nexport const updateProduct = (id, productData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: UPDATE_PRODUCT_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.put(`/api/v1/admin/product/${id}`, productData, config)\n\n        dispatch({\n            type: UPDATE_PRODUCT_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_PRODUCT_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\nexport const getProductDetails = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\n\n        const { data } = await axios.get(`/api/v1/product/${id}`)\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data.product\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DETAILS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\nexport const newReview = (reviewData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: NEW_REVIEW_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.put(`/api/v1/review`, reviewData, config)\n\n        dispatch({\n            type: NEW_REVIEW_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: NEW_REVIEW_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n\nexport const getAdminProducts = () => async (dispatch) => {\n    try {\n\n        dispatch({ type: ADMIN_PRODUCTS_REQUEST })\n\n        const { data } = await axios.get(`/api/v1/admin/products`)\n\n        dispatch({\n            type: ADMIN_PRODUCTS_SUCCESS,\n            payload: data.products\n        })\n\n    } catch (error) {\n\n        dispatch({\n            type: ADMIN_PRODUCTS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Get product reviews\nexport const getProductReviews = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: GET_REVIEWS_REQUEST })\n\n        const { data } = await axios.get(`/api/v1/reviews?id=${id}`)\n\n        dispatch({\n            type: GET_REVIEWS_SUCCESS,\n            payload: data.reviews\n        })\n\n    } catch (error) {\n\n        dispatch({\n            type: GET_REVIEWS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Delete product review\nexport const deleteReview = (id, productId) => async (dispatch) => {\n    try {\n\n        dispatch({ type: DELETE_REVIEW_REQUEST })\n\n        const { data } = await axios.delete(`/api/v1/reviews?id=${id}&productId=${productId}`)\n\n        dispatch({\n            type: DELETE_REVIEW_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n\n        console.log(error.response);\n\n        dispatch({\n            type: DELETE_REVIEW_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Clear Errors\nexport const clearErrors = () => async (dispatch) => {\n    dispatch({\n        type: CLEAR_ERRORS\n    })\n}","D:\\graduationProject\\frontend\\src\\components\\product\\Product.js",[],"D:\\graduationProject\\frontend\\src\\actions\\orderActions.js",[],"D:\\graduationProject\\frontend\\src\\actions\\cartActions.js",[],"D:\\graduationProject\\frontend\\src\\components\\cart\\CheckoutSteps.js",[],"D:\\graduationProject\\frontend\\src\\components\\admin\\Sidebar.js",[],"D:\\graduationProject\\frontend\\src\\constants\\productConstants.js",[],"D:\\graduationProject\\frontend\\src\\constants\\cartConstants.js",[],"D:\\graduationProject\\frontend\\src\\constants\\userConstants.js",[],"D:\\graduationProject\\frontend\\src\\constants\\orderConstants.js",[],"D:\\graduationProject\\frontend\\src\\components\\layout\\Search.js",[],"D:\\graduationProject\\frontend\\src\\components\\review\\ListReviews.js",[],{"ruleId":"222","replacedBy":"223"},{"ruleId":"224","replacedBy":"225"},{"ruleId":"226","severity":1,"message":"227","line":7,"column":23,"nodeType":"228","messageId":"229","endLine":7,"endColumn":34},{"ruleId":"226","severity":1,"message":"230","line":6,"column":10,"nodeType":"228","messageId":"229","endLine":6,"endColumn":18},{"ruleId":"231","severity":1,"message":"232","line":30,"column":29,"nodeType":"233","endLine":30,"endColumn":88},{"ruleId":"226","severity":1,"message":"234","line":19,"column":20,"nodeType":"228","messageId":"229","endLine":19,"endColumn":29},{"ruleId":"226","severity":1,"message":"235","line":20,"column":27,"nodeType":"228","messageId":"229","endLine":20,"endColumn":43},{"ruleId":"236","severity":1,"message":"237","line":35,"column":8,"nodeType":"238","endLine":35,"endColumn":58,"suggestions":"239"},{"ruleId":"236","severity":1,"message":"240","line":47,"column":8,"nodeType":"238","endLine":47,"endColumn":52,"suggestions":"241"},{"ruleId":"226","severity":1,"message":"242","line":60,"column":11,"nodeType":"228","messageId":"229","endLine":60,"endColumn":19},{"ruleId":"226","severity":1,"message":"243","line":5,"column":8,"nodeType":"228","messageId":"229","endLine":5,"endColumn":14},{"ruleId":"226","severity":1,"message":"244","line":30,"column":5,"nodeType":"228","messageId":"229","endLine":30,"endColumn":24},"no-native-reassign",["245"],"no-negated-in-lhs",["246"],"no-unused-vars","'useSelector' is defined but never used.","Identifier","unusedVar","'useAlert' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'setAvatar' is assigned a value but never used.","'setAvatarPreview' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'redirect'. Either include it or remove the dependency array.","ArrayExpression",["247"],"React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["248"],"'onChange' is assigned a value but never used.","'Loader' is defined but never used.","'DELETE_REVIEW_RESET' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"249","fix":"250"},{"desc":"251","fix":"252"},"Update the dependencies array to be: [dispatch, alert, isAuthenticated, error, history, redirect]",{"range":"253","text":"254"},"Update the dependencies array to be: [dispatch, alert, error, history, isUpdated, user]",{"range":"255","text":"256"},[960,1010],"[dispatch, alert, isAuthenticated, error, history, redirect]",[1319,1363],"[dispatch, alert, error, history, isUpdated, user]"]